{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/nova/apps/tracking/src/models/Contract.ts"],"sourcesContent":["import mongoose, { Schema, Document } from 'mongoose';\n\nexport interface IContract extends Document {\n  phone_number: string;\n  lot_number: string;\n  full_name: string;\n  address: string;\n  gatepass: string;\n  signature_data: string;\n  owner_name: string;\n  owner_phone: string;\n  timestamp: Date;\n  ip_address?: string;\n}\n\nconst ContractSchema: Schema = new Schema({\n  phone_number: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  lot_number: {\n    type: String,\n    required: true,\n    length: 8,\n    uppercase: true,\n    trim: true\n  },\n  full_name: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  address: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  gatepass: {\n    type: String,\n    required: true,\n    trim: true,\n    maxlength: 6,\n    uppercase: true,\n    validate: {\n      validator: function(v: string) {\n        return /^[A-Z0-9]*$/.test(v);\n      },\n      message: 'Gatepass solo puede contener letras y n√∫meros'\n    }\n  },\n  signature_data: {\n    type: String,\n    required: true\n  },\n  owner_name: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  owner_phone: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  timestamp: {\n    type: Date,\n    default: Date.now\n  },\n  ip_address: {\n    type: String,\n    required: false\n  }\n});\n\n// Create indexes for better query performance\nContractSchema.index({ timestamp: -1 });\nContractSchema.index({ phone_number: 1 });\nContractSchema.index({ lot_number: 1 }, { unique: true });\n\nexport default mongoose.models.Contract || mongoose.model<IContract>('Contract', ContractSchema);"],"names":[],"mappings":";;;AAAA;;AAeA,MAAM,iBAAyB,IAAI,yGAAA,CAAA,SAAM,CAAC;IACxC,cAAc;QACZ,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,YAAY;QACV,MAAM;QACN,UAAU;QACV,QAAQ;QACR,WAAW;QACX,MAAM;IACR;IACA,WAAW;QACT,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,SAAS;QACP,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,UAAU;QACR,MAAM;QACN,UAAU;QACV,MAAM;QACN,WAAW;QACX,WAAW;QACX,UAAU;YACR,WAAW,SAAS,CAAS;gBAC3B,OAAO,cAAc,IAAI,CAAC;YAC5B;YACA,SAAS;QACX;IACF;IACA,gBAAgB;QACd,MAAM;QACN,UAAU;IACZ;IACA,YAAY;QACV,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,aAAa;QACX,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;IACA,YAAY;QACV,MAAM;QACN,UAAU;IACZ;AACF;AAEA,8CAA8C;AAC9C,eAAe,KAAK,CAAC;IAAE,WAAW,CAAC;AAAE;AACrC,eAAe,KAAK,CAAC;IAAE,cAAc;AAAE;AACvC,eAAe,KAAK,CAAC;IAAE,YAAY;AAAE,GAAG;IAAE,QAAQ;AAAK;uCAExC,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAY,YAAY","debugId":null}}]
}