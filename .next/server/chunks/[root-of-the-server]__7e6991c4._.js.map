{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///var/www/tracking/src/lib/mongodb.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\n\nlet cached = (global as { mongoose?: { conn: null | typeof mongoose; promise: null | Promise<typeof mongoose> } }).mongoose;\n\nif (!cached) {\n  cached = (global as { mongoose?: { conn: null | typeof mongoose; promise: null | Promise<typeof mongoose> } }).mongoose = { conn: null, promise: null };\n}\n\nasync function connectDB() {\n  if (cached?.conn) {\n    return cached.conn;\n  }\n\n  if (!cached?.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    if (cached) {\n      cached.promise = mongoose.connect(MONGODB_URI!, opts).then((mongoose) => {\n        return mongoose;\n      });\n    }\n  }\n\n  try {\n    if (cached) {\n      cached.conn = await cached.promise;\n    }\n  } catch (e) {\n    if (cached) {\n      cached.promise = null;\n    }\n    throw e;\n  }\n\n  return cached?.conn;\n}\n\nexport default connectDB;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,4CAAsG,QAAQ;AAE3H,IAAI,CAAC,QAAQ;IACX,SAAS,4CAAsG,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACxJ;AAEA,eAAe;IACb,IAAI,QAAQ,MAAM;QAChB,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,QAAQ,SAAS;QACpB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,IAAI,QAAQ;YACV,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAc,MAAM,IAAI,CAAC,CAAC;gBAC1D,OAAO;YACT;QACF;IACF;IAEA,IAAI;QACF,IAAI,QAAQ;YACV,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;QACpC;IACF,EAAE,OAAO,GAAG;QACV,IAAI,QAAQ;YACV,OAAO,OAAO,GAAG;QACnB;QACA,MAAM;IACR;IAEA,OAAO,QAAQ;AACjB;uCAEe","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///var/www/tracking/src/models/Contract.ts"],"sourcesContent":["import mongoose, { Schema, Document } from 'mongoose';\n\nexport interface IContract extends Document {\n  phone_number: string;\n  lot_number: string;\n  full_name: string;\n  address: string;\n  signature_data: string;\n  timestamp: Date;\n  ip_address?: string;\n}\n\nconst ContractSchema: Schema = new Schema({\n  phone_number: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  lot_number: {\n    type: String,\n    required: true,\n    length: 8,\n    uppercase: true,\n    trim: true\n  },\n  full_name: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  address: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  signature_data: {\n    type: String,\n    required: true\n  },\n  timestamp: {\n    type: Date,\n    default: Date.now\n  },\n  ip_address: {\n    type: String,\n    required: false\n  }\n});\n\n// Create indexes for better query performance\nContractSchema.index({ timestamp: -1 });\nContractSchema.index({ phone_number: 1 });\nContractSchema.index({ lot_number: 1 }, { unique: true });\n\nexport default mongoose.models.Contract || mongoose.model<IContract>('Contract', ContractSchema);"],"names":[],"mappings":";;;AAAA;;AAYA,MAAM,iBAAyB,IAAI,yGAAA,CAAA,SAAM,CAAC;IACxC,cAAc;QACZ,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,YAAY;QACV,MAAM;QACN,UAAU;QACV,QAAQ;QACR,WAAW;QACX,MAAM;IACR;IACA,WAAW;QACT,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,SAAS;QACP,MAAM;QACN,UAAU;QACV,MAAM;IACR;IACA,gBAAgB;QACd,MAAM;QACN,UAAU;IACZ;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;IACA,YAAY;QACV,MAAM;QACN,UAAU;IACZ;AACF;AAEA,8CAA8C;AAC9C,eAAe,KAAK,CAAC;IAAE,WAAW,CAAC;AAAE;AACrC,eAAe,KAAK,CAAC;IAAE,cAAc;AAAE;AACvC,eAAe,KAAK,CAAC;IAAE,YAAY;AAAE,GAAG;IAAE,QAAQ;AAAK;uCAExC,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAY,YAAY","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///var/www/tracking/src/app/api/check-phone/%5Bphone%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport connectDB from '@/lib/mongodb';\nimport Contract from '@/models/Contract';\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: Promise<{ phone: string }> }\n) {\n  try {\n    await connectDB();\n    \n    const { phone } = await params;\n    const phoneNumber = decodeURIComponent(phone);\n    \n    const existingContract = await Contract.findOne(\n      { phone_number: phoneNumber },\n      { phone_number: 1, full_name: 1, address: 1 }\n    )\n    .sort({ timestamp: -1 })\n    .lean();\n    \n    if (existingContract && !Array.isArray(existingContract)) {\n      return NextResponse.json({\n        exists: true,\n        userData: {\n          phone_number: existingContract.phone_number,\n          full_name: existingContract.full_name,\n          address: existingContract.address\n        }\n      });\n    } else {\n      return NextResponse.json({\n        exists: false,\n        userData: null\n      });\n    }\n    \n  } catch (error) {\n    console.error('Error processing phone check:', error);\n    return NextResponse.json(\n      { error: 'Error procesando la solicitud' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAA0C;IAElD,IAAI;QACF,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAS,AAAD;QAEd,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM;QACxB,MAAM,cAAc,mBAAmB;QAEvC,MAAM,mBAAmB,MAAM,2HAAA,CAAA,UAAQ,CAAC,OAAO,CAC7C;YAAE,cAAc;QAAY,GAC5B;YAAE,cAAc;YAAG,WAAW;YAAG,SAAS;QAAE,GAE7C,IAAI,CAAC;YAAE,WAAW,CAAC;QAAE,GACrB,IAAI;QAEL,IAAI,oBAAoB,CAAC,MAAM,OAAO,CAAC,mBAAmB;YACxD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,QAAQ;gBACR,UAAU;oBACR,cAAc,iBAAiB,YAAY;oBAC3C,WAAW,iBAAiB,SAAS;oBACrC,SAAS,iBAAiB,OAAO;gBACnC;YACF;QACF,OAAO;YACL,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,QAAQ;gBACR,UAAU;YACZ;QACF;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAgC,GACzC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}